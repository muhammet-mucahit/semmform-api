# Generated by Django 3.0.5 on 2020-04-27 22:02

import account.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('form', '__first__'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=40, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Katılma Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Yetkili Mi?')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name='İsim')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='Soyisim')),
                ('dob', models.DateField(null=True)),
                ('phone', models.CharField(max_length=16, null=True, verbose_name='Telefon')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Adres')),
                ('country', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('zip', models.CharField(max_length=5, null=True)),
                ('forms', models.ManyToManyField(to='form.Form')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
